# Docker Compose configuration for TranscribeMCP
version: '3.8'

services:
  # Redis for Celery message broker
  redis:
    image: redis:7-alpine
    container_name: transcribe_mcp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL database (optional, for job persistence)
  postgres:
    image: postgres:15-alpine
    container_name: transcribe_mcp_postgres
    environment:
      POSTGRES_DB: transcribe_mcp
      POSTGRES_USER: transcribe_mcp
      POSTGRES_PASSWORD: ${DB_PASSWORD:-transcribe_mcp_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transcribe_mcp"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Main API service
  api:
    build:
      context: .
      target: development
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: transcribe_mcp_api
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./uploads:/app/uploads
      - ./transcriptions:/app/transcriptions
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://transcribe_mcp:${DB_PASSWORD:-transcribe_mcp_dev}@postgres:5432/transcribe_mcp
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Celery worker for background transcription processing
  worker:
    build:
      context: .
      target: worker
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: transcribe_mcp_worker
    volumes:
      - ./uploads:/app/uploads
      - ./transcriptions:/app/transcriptions
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://transcribe_mcp:${DB_PASSWORD:-transcribe_mcp_dev}@postgres:5432/transcribe_mcp
      - DEBUG=true
      - LOG_LEVEL=INFO
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Flower for Celery monitoring (development only)
  flower:
    image: mher/flower:0.9.7
    container_name: transcribe_mcp_flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
    profiles:
      - monitoring

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: transcribe_mcp_network